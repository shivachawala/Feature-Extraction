import sysimport numpy as npimport mathif len(sys.argv) != 7:    print(        'usage : ', sys.argv[0],        'reduced_data_file vector_file labels_file queried_point_file queried_label nn_idx_file')    sys.exit()train_Data = np.genfromtxt(sys.argv[1], delimiter=',')vectors = np.genfromtxt(sys.argv[2], delimiter=',')labels = np.genfromtxt(sys.argv[3], delimiter=',')query_points = np.genfromtxt(sys.argv[4], delimiter=',')query_labels = np.genfromtxt(sys.argv[5])query_labels = query_labels.reshape(len(query_labels), 1)f = open(sys.argv[6], 'ab')for index, queriedPoint in enumerate(query_points):    label = int(query_labels[index][0])    point = vectors.dot(queriedPoint.T)    dist_1 = sys.maxsize    dist_2 = sys.maxsize    dist_3 = sys.maxsize    dist = sys.maxsize    nearest_1 = 0    nearest_2 = 0    nearest_3 = 0    nearest_T = 0    for i, p in enumerate(train_Data):        d = math.sqrt((p[0] - point[0]) ** 2 + (p[1] - point[1]) ** 2)        if d < dist:            dist = d            nearest_T = int(i)        if labels[i] == 1:            if d < dist_1:                dist_1 = d                nearest_1 = int(i)        elif labels[i] == 2:            if d < dist_2:                dist_2 = d                nearest_2 = int(i)        elif labels[i] == 3:            if d < dist_3:                dist_3 = d                nearest_3 = int(i)    if label == -1:        nn_idx = nearest_T    elif label == 1:        nn_idx = nearest_1    elif label == 2:        nn_idx = nearest_2    elif label == 3:        nn_idx = nearest_3    print(np.array(nn_idx).reshape(1,))    np.savetxt(f, np.array(nn_idx).reshape(1,), fmt='%s', newline='\n')